// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: togds_auth.proto

package togdsauthrpc

import (
	"context"

	"togds/service/togds_auth/rpc/togds_auth"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CheckTokenReq  = togds_auth.CheckTokenReq
	CheckTokenResp = togds_auth.CheckTokenResp
	RefreshReq     = togds_auth.RefreshReq
	RefreshResp    = togds_auth.RefreshResp

	TogdsAuthRpc interface {
		CheckToken(ctx context.Context, in *CheckTokenReq, opts ...grpc.CallOption) (*CheckTokenResp, error)
		Refresh(ctx context.Context, in *RefreshReq, opts ...grpc.CallOption) (*RefreshResp, error)
	}

	defaultTogdsAuthRpc struct {
		cli zrpc.Client
	}
)

func NewTogdsAuthRpc(cli zrpc.Client) TogdsAuthRpc {
	return &defaultTogdsAuthRpc{
		cli: cli,
	}
}

func (m *defaultTogdsAuthRpc) CheckToken(ctx context.Context, in *CheckTokenReq, opts ...grpc.CallOption) (*CheckTokenResp, error) {
	client := togds_auth.NewTogdsAuthRpcClient(m.cli.Conn())
	return client.CheckToken(ctx, in, opts...)
}

func (m *defaultTogdsAuthRpc) Refresh(ctx context.Context, in *RefreshReq, opts ...grpc.CallOption) (*RefreshResp, error) {
	client := togds_auth.NewTogdsAuthRpcClient(m.cli.Conn())
	return client.Refresh(ctx, in, opts...)
}
