// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.5
// Source: authrpc.proto

package authrpcre

import (
	"context"

	"togds/service/auth/rpc/authRpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CheckTokenReq  = authRpc.CheckTokenReq
	CheckTokenResp = authRpc.CheckTokenResp
	LoginReq       = authRpc.LoginReq
	LoginResp      = authRpc.LoginResp
	RefreshReq     = authRpc.RefreshReq
	RefreshResp    = authRpc.RefreshResp

	AuthRpcre interface {
		CheckToken(ctx context.Context, in *CheckTokenReq, opts ...grpc.CallOption) (*CheckTokenResp, error)
		Refresh(ctx context.Context, in *RefreshReq, opts ...grpc.CallOption) (*RefreshResp, error)
	}

	defaultAuthRpcre struct {
		cli zrpc.Client
	}
)

func NewAuthRpcre(cli zrpc.Client) AuthRpcre {
	return &defaultAuthRpcre{
		cli: cli,
	}
}


func (m *defaultAuthRpcre) CheckToken(ctx context.Context, in *CheckTokenReq, opts ...grpc.CallOption) (*CheckTokenResp, error) {
	client := authRpc.NewAuthRpcreClient(m.cli.Conn())
	return client.CheckToken(ctx, in, opts...)
}

func (m *defaultAuthRpcre) Refresh(ctx context.Context, in *RefreshReq, opts ...grpc.CallOption) (*RefreshResp, error) {
	client := authRpc.NewAuthRpcreClient(m.cli.Conn())
	return client.Refresh(ctx, in, opts...)
}
